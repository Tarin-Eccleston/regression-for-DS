catheter.df <- read.table("catheter.data", header = TRUE)
setwd
setwd()
getwd()
setwd(/Users/tarineccleston/Documents/Masters/STATS 762/)
setwd(/Users/tarineccleston/Documents/Masters/STATS 762)
setwd("/Users/tarineccleston/Documents/Masters/STATS 762")
getwd()
setwd("/Users/tarineccleston/Documents/Masters/STATS 762/Exercises/Catheter Analysis")
catheter.df <- read.table("catheter.data", header = TRUE)
catheter.fit <- lm(survived ~ size, data = catheter.df)
summary(catheter.fit)
plot(ca ~ ht, data = catheter.df, xlab = "Height (inches)", ylab = "Catheter Lenght (inches)")
abline(coef(catheter.fit)[1], coef(catheter.fit)[2])
summary(catheter.fit)
catheter.df <- read.table("catheter.data", header = TRUE)
catheter.df <- read.table("catheter.data", header = TRUE)
catheter.fit <- lm(survived ~ size, data = catheter.df)
catheter.df <- read.table("catheter.data", header = TRUE)
catheter.fit <- lm(survived ~ size, data = catheter.df)
View(catheter.df)
View(catheter.df)
catheter.fit <- lm(ca ~ ht, data = catheter.df)
summary(catheter.fit)
plot(ca ~ ht, data = catheter.df, xlab = "Height (inches)", ylab = "Catheter Lenght (inches)")
abline(coef(catheter.fit)[1], coef(catheter.fit)[2])
crabs.df <- read.table("crab.data", header = TRUE)
plot(sats ~ weight, data = crabs.df)
crabs.fit <- glm(sats ~ weight, data = crabs.df, family = "poisson")
crabs.df <- read.table("crab.data", header = TRUE)
crabs.df <- read.table("crab.data", header = TRUE)
crabs.df
setwd("/Users/tarineccleston/Documents/Masters/STATS 762/Exercises/Catheter Analysis")
catheter.df <- read.table("catheter.data", header = TRUE)
catheter.fit <- lm(ca ~ ht, data = catheter.df)
summary(catheter.fit)
# MUST Label Axis
plot(ca ~ ht, data = catheter.df, xlab = "Height (inches)", ylab = "Catheter Lenght (inches)")
abline(coef(catheter.fit)[1], coef(catheter.fit)[2])
____________________________________________________
crabs.df <- read.table("crab.data", header = TRUE)
catheter.df <- read.table("catheter.data", header = TRUE)
crabs.df <- read.table("crab.data", header = TRUE)
plot(sats ~ weight, data = crabs.df)
chd.df <- read.table("chd.data", header = TRUE)
glm <- glm(chd ~ age, family = "binomial", data = chd.df)
summary(chd.fit)
chd.fit <- glm(chd ~ age, family = "binomial", data = chd.df)
summary(chd.fit)
plot(chd ~ age, data = chd.df)
plot(chd ~ age, data = chd.df)
xx <- seq(10, 80, length.out = 1000)
yy <- predict(chd.fit, newdata = data.frame(age = xx), type = "binomial")
yy <- predict(chd.fit, newdata = data.frame(age = xx), type = "link")
lines(xx, yy)
yy <- predict(chd.fit, newdata = data.frame(age = xx), type = "response")
lines(xx, yy)
source("~/Documents/Masters/STATS 762/Exercises/Catheter Analysis/CHD.R")
summary(chd.fit)
# How do we estimate the age which you are 80% likely to get CHD?
# Bootstrapping is used for simulation. Make up data instead of collecting more data.
cbind(chd.fit$age, fitted(chd.fit))
#
cbind(chd.df$age, fitted(chd.fit))
# flipping coin
rbinom(1, 1, 0.5)
# flipping coin
rbinom(1, 1, 0.5)
# flipping coin
rbinom(1, 1, 0.5)
# flipping coin
rbinom(1, 1, 0.5)
# flipping coin
rbinom(1, 15, 0.5)
# flipping coin
rbinom(1, 15, 0.5)
# flipping coin
rbinom(1, 100, 0.5)
# flipping coin
rbinom(1, 100, 0.5)
# flipping coin
rbinom(1, 100, 0.5)
# flipping coin
rbinom(1, 100, 0.5)
# flipping coin
rbinom(1, 100, 0.5)
# flipping coin
rbinom(1, 100000, 0.5)
# flipping coin
rbinom(1, 100000, 0.5)
# flipping coin
rbinom(1, 100000, 0.5)
n.people <- nrow(chd.df$age)
# flipping coin
rbinom(n.people, 1, 0.5)
rbinom(n.people, 1, predict(chd.fit, type = "responce"))
# flipping coin
n.people <- nrow(chd.df$age)
rbinom(n.people, 1, predict(chd.fit, type = "responce"))
# flipping coin
n.people <- nrow(chd.df)
rbinom(n.people, 1, predict(chd.fit, type = "responce"))
rbinom(n.people, 1, predict(chd.fit, type = "response"))
# Create new matrix, age from sample, and predicted likelihood of chd to the response
cbind(chd.df$age, fitted(chd.fit))
setwd("/Users/tarineccleston/Documents/Masters/STATS 762/Exercises/Kauri")
kauri.df <- read.csv("kauri.csv", header = TRUE)
View(catheter.df)
View(kauri.df)
plot(presence ~ altitude, data = kauri.df)
plot(presence ~ altitude, data = kauri.df, xlab = "Altitude (m)", ylab = "Presence (Yes/No)"))
plot(presence ~ altitude, data = kauri.df, xlab = "Altitude (m)", ylab = "Presence (Yes/No)")
# Admin
setwd("/Users/tarineccleston/Documents/Masters/STATS 762/Exercises/Kauri")
# Q1
kauri.df <- read.csv("kauri.csv", header = TRUE)
# Q1
kauri.df <- read.csv("kauri.csv", header = TRUE)
plot(presence ~ altitude, data = kauri.df, xlab = "Altitude (m)", ylab = "Presence (Yes/No)")
# Q2
kauri.fit <- glm(presence ~ altitude, data = kauri.df, family = "binomial")
summary(kauri.fit)
# Fit regression curve
xx <- seq(0, 6, length.out = 100)
yy <- predict(crabs.df, newdata = data.frame(weight = xx), type = "response")
lines(xx, yy)
# Fit regression curve
xx <- seq(0, 6, length.out = 100)
yy <- predict(kauri.df, newdata = data.frame(weight = xx), type = "response")
lines(xx, yy)
# Fit regression curve
xx <- seq(0, 6, length.out = 100)
yy <- predict(kauri.df, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
# Fit regression curve
xx <- seq(0, 6, length.out = 1000)
yy <- predict(kauri.df, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
# Fit regression curve
xx <- seq(0, 600, length.out = 1000)
yy <- predict(kauri.df, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
source("~/Documents/Masters/STATS 762/Exercises/Kauri/analysis.R")
# Fit regression curve
xx <- seq(0, 600, length.out = 1000)
yy <- predict(kauri.df, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
# Q3
# Make new dataset
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
# Q3
# Make new dataset
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
# Compare real data wiuth simulated data
par(mfrow = c(1, 2))
plot(presence ~ altitude, data = kauri.df, main = "Original")
yy <- predict(kauri.fit, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
source("~/Documents/Masters/STATS 762/Exercises/Kauri/analysis.R")
# Q1
kauri.df <- read.csv("kauri.csv", header = TRUE)
plot(presence ~ altitude, data = kauri.df, xlab = "Altitude (m)", ylab = "Presence (Yes/No)")
# Q2
kauri.fit <- glm(presence ~ altitude, data = kauri.df, family = "binomial")
summary(kauri.fit)
# Fit regression curve
xx <- seq(0, 600, length.out = 1000)
yy <- predict(kauri.df, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
# Admin
setwd("/Users/tarineccleston/Documents/Masters/STATS 762/Exercises/Kauri")
# Q1
kauri.df <- read.csv("kauri.csv", header = TRUE)
plot(presence ~ altitude, data = kauri.df, xlab = "Altitude (m)", ylab = "Presence (Yes/No)")
# Q2
kauri.fit <- glm(presence ~ altitude, data = kauri.df, family = "binomial")
summary(kauri.fit)
# Fit regression curve
xx <- seq(0, 600, length.out = 1000)
yy <- predict(kauri.df, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
yy <- predict(kauri.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
# Admin
setwd("/Users/tarineccleston/Documents/Masters/STATS 762/Exercises/Kauri")
# Q1
kauri.df <- read.csv("kauri.csv", header = TRUE)
plot(presence ~ altitude, data = kauri.df, xlab = "Altitude (m)", ylab = "Presence (Yes/No)")
# Q2
kauri.fit <- glm(presence ~ altitude, data = kauri.df, family = "binomial")
summary(kauri.fit)
# Fit regression curve
xx <- seq(0, 600, length.out = 1000)
yy <- predict(kauri.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
lines(xx, yy)
# Fit regression curve
xx <- seq(0, 600, length.out = 1000)
yy <- predict(kauri.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
yy <- predict(kauri.df, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
lines(xx, yy)
# Q3
# Make new dataset
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
# Compare real data wiuth simulated data
par(mfrow = c(1, 2))
plot(presence ~ altitude, data = kauri.df, main = "Original")
yy <- predict(kauri.fit, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
# Bootstrapping
n.boots <- 10000
coef.boot <- matrix(0, nrow = n.boots, ncol = 2)
agep80.boot <- numeric(n.boots)
for (i in 1:n.boots){
kauri.boot <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
fit.boot <- glm(kauri.boot ~ altitude, family = "binomial", data = kauri.df)
coef.boot[i, ] <- coef(fit.boot)
agep80.boot[i] <- (0.84162 - coef(fit.boot)[1])/coef(fit.boot)[2]
}
head(coef.boot)
coef(kauri.fit)
mean(coef.boot)
apply(coef.boot,mean)
source("~/Documents/Masters/STATS 762/Exercises/Kauri/analysis.R")
# Admin
setwd("/Users/tarineccleston/Documents/Masters/STATS 762/Exercises/Kauri")
# Q1
kauri.df <- read.csv("kauri.csv", header = TRUE)
plot(presence ~ altitude, data = kauri.df, xlab = "Altitude (m)", ylab = "Presence (Yes/No)")
# Q2
kauri.fit <- glm(presence ~ altitude, data = kauri.df, family = "binomial")
summary(kauri.fit)
# Fit regression curve
xx <- seq(0, 600, length.out = 1000)
yy <- predict(kauri.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
# Q3
# Make new dataset
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
# Compare real data wiuth simulated data
par(mfrow = c(1, 2))
plot(presence ~ altitude, data = kauri.df, main = "Original")
yy <- predict(kauri.fit, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated 1")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated 2")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
# Admin
setwd("/Users/tarineccleston/Documents/Masters/STATS 762/Exercises/Kauri")
# Q1
kauri.df <- read.csv("kauri.csv", header = TRUE)
plot(presence ~ altitude, data = kauri.df, xlab = "Altitude (m)", ylab = "Presence (Yes/No)")
# Q2
kauri.fit <- glm(presence ~ altitude, data = kauri.df, family = "binomial")
summary(kauri.fit)
# Fit regression curve
xx <- seq(0, 600, length.out = 1000)
yy <- predict(kauri.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
# Q3
# Make new dataset
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
# Compare real data wiuth simulated data
par(mfrow = c(4, 3))
plot(presence ~ altitude, data = kauri.df, main = "Original")
yy <- predict(kauri.fit, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated 1")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated 2")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated 3")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
# Compare real data wiuth simulated data
par(mfrow = c(2, 2))
plot(presence ~ altitude, data = kauri.df, main = "Original")
yy <- predict(kauri.fit, newdata = data.frame(presence = xx), type = "response")
lines(xx, yy)
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated 1")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated 2")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
n.kauri <- nrow(kauri.df)
new.kauri <- rbinom(n.kauri, 1, predict(kauri.fit, type = "response"))
plot(new.kauri ~ altitude, data = kauri.df, main = "Simulated 3")
# new.fit <- glm(new.kauri ~ altitude, family = binomial("probit"), data = kauri.df)
new.fit <- glm(new.kauri ~ altitude, family = "binomial", data = kauri.df)
yy <- predict(new.fit, newdata = data.frame(altitude = xx), type = "response")
lines(xx, yy)
